#repository pertama.
import random
import os 
os.system('cls' if os.name=='nt' else 'clear')
while (1 < 2):
  print "\n"
    print "Batu, Kertas, Gunting - Tembak!" 
    userChoice = raw_input("Pilih senjata kamu [B]atu], [K]ertas, or [G]unting: ")
     if not re.match("[SsRrPp]", userChoice):
        print "Silakan pilih satu huruf:"
          print "[B]atu], [K]ertas, [G]unting."
        continue
    // Gema pilihan pengguna 
  print "Kamu pilih: " + pilihanPengguna  
  choices = ['B', 'K', 'G'] 
  opponenetChoice = random.choice(choices)
  print "I chose: " + opponenetChoice
  if opponenetChoice == str.upper(userChoice):
      print "Tie! "
 #if opponenetChoice == str("R") and str.upper(userChoice) == "P"  
     elif opponenetChoice == 'R' and userChoice.upper() == 'S': 
       print "Gunting melawan batu, Aku menang! "  
       lanjut
     elif opponenetChoice == 'S' and userChoice.upper() == 'P':  
    print "Gunting melawan kertas! Aku menang! "     
      continue      
    elif opponenetChoice == 'P' and userChoice.upper() == 'R':  
       print "Kertas melawan batu, aku menang! " 
     lanjut        
        else: 
         print "Kamu menang!"
         // implementasi berulang dari pencarian biner dengan Python def binary_search (a_list, item):  
        """ Melakukan pencarian biner berulang untuk menemukan posisi bilangan bulat dalam daftar yang diberikan, diurutkan. 
        a_list -- daftar bilangan bulat yang diurutkan 
        item -- bilangan bulat yang Anda cari untuk posisi
     """    first = 0
      last = len(a_list) - 1 
            while first <= last:
                i = (first + last) / 2
        if a_list[i] == item:   
        return ' temukan pada posisi '.format(item=item, i=i) 
      elif a_list[i] > item:
          last = i - 1
        elif a_list[i] < item: 
           first = i + 1 
          else:   
      return ' tidak ditemukan di dalam list'.format(item=item)  
      // recursive implementation of binary search in Python 
     def binary_search_recursive(a_list, item):  
       """Melakukan pencarian biner rekursif dari bilangan bulat dalam daftar yang diberikan, diurutkan,. 
      a_list -- daftar bilangan bulat yang diurutkan   
     item -- bilangan bulat yang Anda cari untuk posisi
     """    first = 0     
     last = len(a_list) - 1
     
